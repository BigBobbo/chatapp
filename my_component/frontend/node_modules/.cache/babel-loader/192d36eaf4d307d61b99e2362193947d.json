{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT license.\n/* eslint-disable max-classes-per-file */\nimport { CancellationErrorCodePropertyName } from \"../common.speech/Exports\";\nimport { Contracts } from \"./Contracts\";\nimport { CancellationDetailsBase, CancellationErrorCode, CancellationReason, PropertyCollection, PropertyId, ResultReason } from \"./Exports\";\nexport var SpeakerRecognitionResultType;\n(function (SpeakerRecognitionResultType) {\n  SpeakerRecognitionResultType[SpeakerRecognitionResultType[\"Verify\"] = 0] = \"Verify\";\n  SpeakerRecognitionResultType[SpeakerRecognitionResultType[\"Identify\"] = 1] = \"Identify\";\n})(SpeakerRecognitionResultType || (SpeakerRecognitionResultType = {}));\n/**\n * Output format\n * @class SpeakerRecognitionResult\n */\nexport class SpeakerRecognitionResult {\n  constructor(resultType, data, profileId) {\n    let resultReason = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ResultReason.RecognizedSpeaker;\n    this.privProperties = new PropertyCollection();\n    this.privReason = resultReason;\n    if (this.privReason !== ResultReason.Canceled) {\n      if (resultType === SpeakerRecognitionResultType.Identify) {\n        const json = JSON.parse(data);\n        Contracts.throwIfNullOrUndefined(json, \"JSON\");\n        this.privProfileId = json.identifiedProfile.profileId;\n        this.privScore = json.identifiedProfile.score;\n      } else {\n        const json = JSON.parse(data);\n        Contracts.throwIfNullOrUndefined(json, \"JSON\");\n        this.privScore = json.score;\n        if (json.recognitionResult.toLowerCase() !== \"accept\") {\n          this.privReason = ResultReason.NoMatch;\n        }\n        if (profileId !== undefined && profileId !== \"\") {\n          this.privProfileId = profileId;\n        }\n      }\n    } else {\n      const json = JSON.parse(data);\n      Contracts.throwIfNullOrUndefined(json, \"JSON\");\n      this.privErrorDetails = json.statusText;\n      this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.ServiceError]);\n    }\n    this.privProperties.setProperty(PropertyId.SpeechServiceResponse_JsonResult, data);\n  }\n  get properties() {\n    return this.privProperties;\n  }\n  get reason() {\n    return this.privReason;\n  }\n  get profileId() {\n    return this.privProfileId;\n  }\n  get errorDetails() {\n    return this.privErrorDetails;\n  }\n  get score() {\n    return this.privScore;\n  }\n}\n/**\n * @class SpeakerRecognitionCancellationDetails\n */\nexport class SpeakerRecognitionCancellationDetails extends CancellationDetailsBase {\n  constructor(reason, errorDetails, errorCode) {\n    super(reason, errorDetails, errorCode);\n  }\n  /**\n   * Creates an instance of SpeakerRecognitionCancellationDetails object for the canceled SpeakerRecognitionResult\n   * @member SpeakerRecognitionCancellationDetails.fromResult\n   * @function\n   * @public\n   * @param {SpeakerRecognitionResult} result - The result that was canceled.\n   * @returns {SpeakerRecognitionCancellationDetails} The cancellation details object being created.\n   */\n  static fromResult(result) {\n    const reason = CancellationReason.Error;\n    let errorCode = CancellationErrorCode.NoError;\n    if (!!result.properties) {\n      errorCode = CancellationErrorCode[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError])];\n    }\n    return new SpeakerRecognitionCancellationDetails(reason, result.errorDetails, errorCode);\n  }\n}","map":{"version":3,"mappings":"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","names":["CancellationErrorCodePropertyName","Contracts","CancellationDetailsBase","CancellationErrorCode","CancellationReason","PropertyCollection","PropertyId","ResultReason","SpeakerRecognitionResultType","SpeakerRecognitionResult","constructor","resultType","data","profileId","resultReason","RecognizedSpeaker","privProperties","privReason","Canceled","Identify","json","JSON","parse","throwIfNullOrUndefined","privProfileId","identifiedProfile","privScore","score","recognitionResult","toLowerCase","NoMatch","undefined","privErrorDetails","statusText","setProperty","ServiceError","SpeechServiceResponse_JsonResult","properties","reason","errorDetails","SpeakerRecognitionCancellationDetails","errorCode","fromResult","result","Error","NoError","getProperty"],"sources":["src/sdk/SpeakerRecognitionResult.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license.\r\n\r\n/* eslint-disable max-classes-per-file */\r\nimport { CancellationErrorCodePropertyName } from \"../common.speech/Exports\";\r\nimport { Contracts } from \"./Contracts\";\r\nimport {\r\n    CancellationDetailsBase,\r\n    CancellationErrorCode,\r\n    CancellationReason,\r\n    PropertyCollection,\r\n    PropertyId,\r\n    ResultReason,\r\n} from \"./Exports\";\r\n\r\nexport enum SpeakerRecognitionResultType {\r\n    Verify,\r\n    Identify\r\n}\r\n\r\ninterface IdentifyResult {\r\n    identifiedProfile: {\r\n        profileId: string;\r\n        score: number;\r\n    };\r\n}\r\n\r\ninterface VerifyResult {\r\n    recognitionResult: string;\r\n    score: number;\r\n}\r\n\r\n/**\r\n * Output format\r\n * @class SpeakerRecognitionResult\r\n */\r\nexport class SpeakerRecognitionResult {\r\n    private privReason: ResultReason;\r\n    private privProperties: PropertyCollection;\r\n    private privProfileId: string;\r\n    private privScore: number;\r\n    private privErrorDetails: string;\r\n\r\n    public constructor(resultType: SpeakerRecognitionResultType, data: string, profileId: string, resultReason: ResultReason = ResultReason.RecognizedSpeaker) {\r\n        this.privProperties = new PropertyCollection();\r\n        this.privReason = resultReason;\r\n        if (this.privReason !== ResultReason.Canceled) {\r\n            if (resultType === SpeakerRecognitionResultType.Identify) {\r\n                const json: IdentifyResult = JSON.parse(data) as IdentifyResult;\r\n                Contracts.throwIfNullOrUndefined(json, \"JSON\");\r\n                this.privProfileId = json.identifiedProfile.profileId;\r\n                this.privScore = json.identifiedProfile.score;\r\n            } else {\r\n                const json: VerifyResult = JSON.parse(data) as VerifyResult;\r\n                Contracts.throwIfNullOrUndefined(json, \"JSON\");\r\n                this.privScore = json.score;\r\n                if (json.recognitionResult.toLowerCase() !== \"accept\") {\r\n                    this.privReason = ResultReason.NoMatch;\r\n                }\r\n                if (profileId !== undefined && profileId !== \"\") {\r\n                    this.privProfileId = profileId;\r\n                }\r\n            }\r\n        } else {\r\n            const json: { statusText: string } = JSON.parse(data) as { statusText: string };\r\n            Contracts.throwIfNullOrUndefined(json, \"JSON\");\r\n            this.privErrorDetails = json.statusText;\r\n            this.privProperties.setProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.ServiceError]);\r\n        }\r\n        this.privProperties.setProperty(PropertyId.SpeechServiceResponse_JsonResult, data);\r\n    }\r\n\r\n    public get properties(): PropertyCollection {\r\n        return this.privProperties;\r\n    }\r\n\r\n    public get reason(): ResultReason {\r\n        return this.privReason;\r\n    }\r\n\r\n    public get profileId(): string {\r\n        return this.privProfileId;\r\n    }\r\n\r\n    public get errorDetails(): string {\r\n        return this.privErrorDetails;\r\n    }\r\n\r\n    public get score(): number {\r\n        return this.privScore;\r\n    }\r\n}\r\n\r\n/**\r\n * @class SpeakerRecognitionCancellationDetails\r\n */\r\nexport class SpeakerRecognitionCancellationDetails extends CancellationDetailsBase {\r\n\r\n    private constructor(reason: CancellationReason, errorDetails: string, errorCode: CancellationErrorCode) {\r\n        super(reason, errorDetails, errorCode);\r\n    }\r\n\r\n    /**\r\n     * Creates an instance of SpeakerRecognitionCancellationDetails object for the canceled SpeakerRecognitionResult\r\n     * @member SpeakerRecognitionCancellationDetails.fromResult\r\n     * @function\r\n     * @public\r\n     * @param {SpeakerRecognitionResult} result - The result that was canceled.\r\n     * @returns {SpeakerRecognitionCancellationDetails} The cancellation details object being created.\r\n     */\r\n    public static fromResult(result: SpeakerRecognitionResult): SpeakerRecognitionCancellationDetails {\r\n        const reason = CancellationReason.Error;\r\n        let errorCode: CancellationErrorCode = CancellationErrorCode.NoError;\r\n\r\n        if (!!result.properties) {\r\n            errorCode = CancellationErrorCode[result.properties.getProperty(CancellationErrorCodePropertyName, CancellationErrorCode[CancellationErrorCode.NoError]) as keyof typeof CancellationErrorCode];\r\n        }\r\n\r\n        return new SpeakerRecognitionCancellationDetails(reason, result.errorDetails, errorCode);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}