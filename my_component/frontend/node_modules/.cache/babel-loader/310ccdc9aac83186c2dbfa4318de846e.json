{"ast":null,"code":"//\n// Copyright (c) Microsoft. All rights reserved.\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\n//\nimport { ConsoleLoggingListener } from \"../common.browser/Exports\";\nimport { Events } from \"../common/Exports\";\n/**\n * Defines diagnostics API for managing console output\n * Added in version 1.21.0\n */\nexport class Diagnostics {\n  static SetLoggingLevel(logLevel) {\n    this.privListener = new ConsoleLoggingListener(logLevel);\n    Events.instance.attachConsoleListener(this.privListener);\n  }\n  static SetLogOutputPath(path) {\n    if (typeof window === \"undefined\") {\n      if (!!this.privListener) {\n        this.privListener.logPath = path;\n      }\n    } else {\n      throw new Error(\"File system logging not available in browser.\");\n    }\n  }\n}\nDiagnostics.privListener = undefined;","map":{"version":3,"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAASA,sBAAsB,QAAQ,2BAA2B;AAClE,SAASC,MAAM,QAAQ,mBAAmB;AAG1C;;;;AAIA,OAAM,MAAOC,WAAW;EAGb,OAAOC,eAAe,CAACC,QAAkB;IAC5C,IAAI,CAACC,YAAY,GAAI,IAAIL,sBAAsB,CAACI,QAAQ,CAAC;IACzDH,MAAM,CAACK,QAAQ,CAACC,qBAAqB,CAAC,IAAI,CAACF,YAAY,CAAC;EAC5D;EAEO,OAAOG,gBAAgB,CAACC,IAAY;IACvC,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;MAC/B,IAAI,CAAC,CAAC,IAAI,CAACL,YAAY,EAAE;QACrB,IAAI,CAACA,YAAY,CAACM,OAAO,GAAGF,IAAI;;KAEvC,MAAM;MACH,MAAM,IAAIG,KAAK,CAAC,+CAA+C,CAAC;;EAExE;;AAfeV,wBAAY,GAA2BW,SAAS","names":["ConsoleLoggingListener","Events","Diagnostics","SetLoggingLevel","logLevel","privListener","instance","attachConsoleListener","SetLogOutputPath","path","window","logPath","Error","undefined"],"sources":["src/sdk/Diagnostics.ts"],"sourcesContent":["//\r\n// Copyright (c) Microsoft. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE.md file in the project root for full license information.\r\n//\r\n\r\nimport { ConsoleLoggingListener } from \"../common.browser/Exports\";\r\nimport { Events } from \"../common/Exports\";\r\nimport { LogLevel } from \"./LogLevel\";\r\n\r\n/**\r\n * Defines diagnostics API for managing console output\r\n * Added in version 1.21.0\r\n */\r\nexport class Diagnostics {\r\n    private static privListener: ConsoleLoggingListener = undefined;\r\n\r\n    public static SetLoggingLevel(logLevel: LogLevel): void {\r\n        this.privListener =  new ConsoleLoggingListener(logLevel);\r\n        Events.instance.attachConsoleListener(this.privListener);\r\n    }\r\n\r\n    public static SetLogOutputPath(path: string): void {\r\n        if (typeof window === \"undefined\") {\r\n            if (!!this.privListener) {\r\n                this.privListener.logPath = path;\r\n            }\r\n        } else {\r\n            throw new Error(\"File system logging not available in browser.\");\r\n        }\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}